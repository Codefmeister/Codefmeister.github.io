<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>numpy on Codefmeister</title>
    <link>https://codefmeister.github.io/tags/numpy/</link>
    <description>Recent content in numpy on Codefmeister</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://codefmeister.github.io/tags/numpy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>np.clip作用解析</title>
      <link>https://codefmeister.github.io/p/np.clip%E4%BD%9C%E7%94%A8%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codefmeister.github.io/p/np.clip%E4%BD%9C%E7%94%A8%E8%A7%A3%E6%9E%90/</guid>
      <description>np.clip分析 语法 np.clip(a, a_min, a_max, out=None, **kwarys)
作用 对数组a进行裁剪，小于a_min 的数用a_min代替， 大于a_max的数用a_max代替。
需要注意的是，函数本身并不会对a_min和a_max之间的大小进行检查。
参数  a: 待裁剪的数组 a_min: 下界 a_max: 上界  示例 &amp;gt;&amp;gt;&amp;gt; a = np.arange(10)&amp;gt;&amp;gt;&amp;gt; print(a)array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])&amp;gt;&amp;gt;&amp;gt; b = np.clip(a, 3, 7)&amp;gt;&amp;gt;&amp;gt; print(b)array([3, 3, 3, 3, 4, 5, 6, 7, 7, 7])官方文档 Clip (limit) the values in an array.
Given an interval, values outside the interval are clipped tothe interval edges.</description>
    </item>
    
    <item>
      <title>np.random中各函数一览</title>
      <link>https://codefmeister.github.io/p/np.random%E4%B8%AD%E5%90%84%E5%87%BD%E6%95%B0%E4%B8%80%E8%A7%88/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codefmeister.github.io/p/np.random%E4%B8%AD%E5%90%84%E5%87%BD%E6%95%B0%E4%B8%80%E8%A7%88/</guid>
      <description>np.random.uniform() 语法 `numpy.random.uniform(low=0.0, high=1.0, size = None)
作用 返回一个均匀分布的采样结果。 左闭右开区间[low, high).
返回数组的shape与size相同。
参数  low: 下界，默认为0.0 high: 上界，默认为1.0 size: 返回数组的shape， 默认为None，即返回一个单值  举例 &amp;gt;&amp;gt;&amp;gt; a = np.random.uniform(1,2,(3,4))&amp;gt;&amp;gt;&amp;gt; print(a)array([[1.81297209, 1.79414559, 1.24677702, 1.44857774],[1.9171547 , 1.84473086, 1.33114168, 1.95953694],[1.66085822, 1.30895404, 1.1047299 , 1.6256421 ]])np.random.randn() 语法 numpy.random.randn(d0, d1, ..., dn)
作用 返回一个shape为(d0, d1, ..., dn)的正态分布采样。分布的均值为0,方差为1. 如果没有提供参数，则返回单个值的采样。
举例 &amp;gt;&amp;gt;&amp;gt; a = np.random.randn(5,6)&amp;gt;&amp;gt;&amp;gt; print(a)array([[-0.47617937, -0.43465103, 0.14896871, 0.21132357, 0.2143598 ,-0.03354328],[-0.</description>
    </item>
    
    <item>
      <title>numpy求解范数--numpy.linalg.norm</title>
      <link>https://codefmeister.github.io/p/numpy%E6%B1%82%E8%A7%A3%E8%8C%83%E6%95%B0-numpy.linalg.norm/</link>
      <pubDate>Sat, 21 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codefmeister.github.io/p/numpy%E6%B1%82%E8%A7%A3%E8%8C%83%E6%95%B0-numpy.linalg.norm/</guid>
      <description>numpy.linalg.norm 语法 numpy.linalg.norm(x,ord=None,axis=None,keepdims=False)
Parameters  x: array_like   Input array. If axis is None, x must be 1-D or 2-D, unless ord is None. If both axis and ord are None, the 2-norm of x.ravel will be returned.
 X是输入的array, array的情况必须是以下三种情况之一:
 axis未指定，ord指定。此时x必须是一维或二维数组 axis指定，x任意 axis未指定，ord未指定，此时x任意，返回值为x被展平后的一维向量x.ravel的二范数。   ord：{non-zero int, inf, -inf, &amp;lsquo;fro&amp;rsquo;, &amp;lsquo;nuc&amp;rsquo;}, optional   Order of the norm (see table under Notes). inf means numpy&amp;rsquo;s inf object. The default is None.</description>
    </item>
    
  </channel>
</rss>
