<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>numpy基础 on Codefmeister</title>
    <link>https://Codefmeister.github.io/tags/numpy%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in numpy基础 on Codefmeister</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Nov 2020 09:40:49 +0800</lastBuildDate><atom:link href="https://Codefmeister.github.io/tags/numpy%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>np.transpose()详解</title>
      <link>https://Codefmeister.github.io/p/np.transpose%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 21 Nov 2020 09:40:49 +0800</pubDate>
      
      <guid>https://Codefmeister.github.io/p/np.transpose%E8%AF%A6%E8%A7%A3/</guid>
      <description>ndarray的转置(transpose) 对于A是由np.ndarray表示的情况：
可以直接使用命令A.T。
也可以使用命令A.transpose()。
A.T 与 A.transpose()对比 结论: 在默认情况下，两者效果相同，但transpose()可以指定交换的axis维度。
对于一维数组，两者均不改变，返回原数组。
对于二维数组，默认进行标准的转置操作。
对于多维数组A,A.shape为(a,b,c,d,...,n)，则转置后的shape为(n,...,d,c,b,a)。
对于.transpose()，可以指定转置后的维度。语法：A.transpose((axisOrder1,...,axisOrderN))，其效果等同于np.transpose(A,(axisOrder1,...,axisOrderN)),(axisOrder)中是想要得到的索引下标顺序。效果详见例子。
Example： 二维默认情况下： A = np.array([[1,2],[3,4]]) print(A) print(A.T) print(A.transpose()) 结果如下：
多维默认情况下： a = np.array([[[1,2,3,4],[4,5,6,7]],[[2,3,4,5],[5,6,7,8]],[[3,4,5,6],[4,5,6,7]]]) print(a.shape) print(a.T.shape) print(a.transpose().shape) 结果如下：
指定维度情况： a = np.array([[[1,2,3,4],[4,5,6,7]],[[2,3,4,5],[5,6,7,8]],[[3,4,5,6],[4,5,6,7]]]) print(a.shape) print(a.transpose(1,2,0).shape) A = np.transpose(a,(1,2,0)) print(A.shape) 结果如下：
从截图中可以看出，a.transpose(1,2,0)与np.transpose(a,(1,2,0))效果相同。代码段中给出的axes是(1,2,0)，这决定了transpose后的数组，其shape在第一个维度即shape[0]上是原来的shape[1]，第二维shape[1]是原来的shape[2]，第三维shape[2]是原来的shape[0]。所以原shape为(3,2,4)。新的shape为(2,4,3)。</description>
    </item>
    
    <item>
      <title>np.unique()解读</title>
      <link>https://Codefmeister.github.io/p/np.unique%E8%A7%A3%E8%AF%BB/</link>
      <pubDate>Sat, 21 Nov 2020 09:40:49 +0800</pubDate>
      
      <guid>https://Codefmeister.github.io/p/np.unique%E8%A7%A3%E8%AF%BB/</guid>
      <description>np.unique()官方文档分析以及举例 1.1 官方文档及解读 numpy.unique 语法：numpy.unique(ar, return_index=False, return_inverse=False, return_counts=False, axis=None)
作用：找到array中不重复（独一无二）的元素
返回值：默认返回不重复元素的sorted排好序的从小到大的数组。可选的返回值有：
 输入数组提供不重复值(unique)元素的索引下标(如果有多个返回第一个) 利用unique数组重构原有的input数组所需要的的索引下标 该unique元素在input数组中的出现次数，相当于count  Parameter
  ar：array like
输入的数组，除非特别指定axis，数组将被展平为1-D形式进行处理。
  return_index: bool, optional
如果为True，返回输入数组提供不重复值(unique)元素的索引下标(如果有多个返回第一个)
  return_inverse: bool, optional
如果为True，返回利用unique数组重构原有的input数组所需要的的索引下标
  axis: int or None, optional
进行操作的维度。如果为None，数组将被展平作为一维数组处理，如果指定了axis，则以该维索引构成的子数组作为元素，将整个数组视为一维数组进行处理。如果axis被使用，则不支持Object Array以及structured arrays。
  Returns
  unique: ndarray
排好序(从小到大)的unique值
  unique_indices: ndarray, optional
unique数组中对应位置的value值第一次在input数组中出现的下标值。当return_index = True时返回。
  unique_inverse: ndarray, optional
利用unique数组重构源输入input数组所需要的索引下标。当return_inverse = True的时候返回。
  unique_count: ndarray, optional 每个unique values在原数组中出现的次数，当return_counts=True时返回。</description>
    </item>
    
  </channel>
</rss>
